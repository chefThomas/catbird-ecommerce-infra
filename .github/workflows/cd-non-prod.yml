name: Deploy E-comm Non-Prod # Name of the workflow

on:
  workflow_dispatch:
  push:
    branches: [non-prod]

jobs:
  plan:
    name: Terraform Plan
    environment: non-production
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1
      - name: Initialise project and view terraform plan
        run: |
          terraform fmt
          terraform init -var-file="terraform.nonprod.tfvars" -backend-config=backend-nonprod.tfvars
          terraform plan -var-file="terraform.nonprod.tfvars" -backend-config=backend-nonprod.tfvars
  deploy:
    name: Terraform Deploy
    environment: non-production
    needs: plan
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1
      - name: Aplly Terraform plan
        run: |
          terraform fmt
          terraform init -var-file="terraform.nonprod.tfvars" -backend-config=backend-nonprod.tfvars
          terraform apply -var-file="terraform.nonprod.tfvars" -auto-approve

#TODO refactor to use OIDC instead of AWS credentials